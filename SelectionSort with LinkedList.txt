class Node:
    def __init__(self, initdata):
        self.data = initdata
        self.next = None

    def getData(self):
        return self.data

    def getNext(self):
            return self.next

    def setData(self, newdata):
        self.data = newdata

    def setNext(self, newnext):
        self.next = newnext

class UnorderedList:
    def __init__(self):
        self.head = None

    def isEmpty(self):
        return self.head is None

    def add(self, item):
        temp = Node(item)
        temp.setNext(self.head)
        self.head = temp

    def length(self):
        current = self.head
        count = 0
        while current is not None:
            count = count + 1
            current = current.getNext()
        return count

    def search(self, item):
        current = self.head
        while current is not None:
            if current.getData() == item:
                return True
            else:
                current = current.getNext()
        return False

    def remove(self, item):
        current = self.head
        previous = None
        found = False
        while not found:
            if current.getData() == item:
                    found = True
            else:
                current = current.getNext()
                if previous is None:
                    self.head = current.getNext()
                else:
                    previous.setNext(current.getNext())

    def display(self):
        current = self.head
        lista = []
        while current is not None:
            lista.append(current.getData())
            current = current.getNext()
        print(lista)
==============================================================================
from list import *

mylist = UnorderedList()

mylist.add(31)
mylist.add(77)
mylist.add(17)
mylist.add(93)
mylist.add(26)
mylist.add(54)

mylist.display()


def selectionSort(mylist):
    current = mylist.head
    if current is None:
        print("linked list is empty .")
    else:
        while current is not None:
            min = current
            the_next = current.getNext()
            while the_next is not None:
                if min.getData() > the_next.getData():
                    min = the_next
                the_next = the_next.getNext()
            x = current.getData()
            current.setData(min.getData())
            min.setData(x)
            current = current.getNext()

selectionSort(mylist)
mylist.display()